<?xml version="1.0" encoding="UTF-8"?>
<ipxact:component xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ipxact="http://www.accellera.org/XMLSchema/IPXACT/1685-2014" xsi:schemaLocation="http://www.accellera.org/images/XMLSchema/IPXACT/1685-2014/index.xsd">
    <ipxact:vendor>meklort</ipxact:vendor>
    <ipxact:library>&lt;PROJECT&gt;</ipxact:library>
    <ipxact:name>NVM Register Definitions</ipxact:name>
    <ipxact:version>1.0</ipxact:version>
    <ipxact:memoryMaps>
        <!-- Device NVM Registers: 0xC000_7000 to C000_7080 (MIPS) -->
        <!-- Device NVM Registers: 0x6024_0000 to 6024_0080 (APE) -->
        <!-- Device NVM Registers: 0xA004_7000 to A004_7080 (APE, Function 0) -->
        <!-- Device NVM Registers: 0xA005_7000 to A005_7080 (APE, Function 1) -->
        <!-- Device NVM Registers: 0xA006_7000 to A006_7080 (APE, Function 2) -->
        <!-- Device NVM Registers: 0xA007_7000 to A007_7080 (APE, Function 3) -->
        <ipxact:memoryMap>
            <ipxact:name>NVM</ipxact:name>
            <ipxact:description>Device Registers</ipxact:description>
            <ipxact:addressBlock>
                <ipxact:name>NVM</ipxact:name>
                <ipxact:description>Device Registers</ipxact:description>
                <ipxact:baseAddress>0xC0007000</ipxact:baseAddress>
                <!-- LINK: addressBlockDefinitionGroup: see 6.9.3, Address blockdefinition group -->
                <!-- LINK: memoryBlockData: see 6.9.4, memoryBlockData group -->
                <ipxact:usage>register</ipxact:usage>
                <ipxact:volatile>false</ipxact:volatile>
                <ipxact:register>
                    <ipxact:name>COMMAND</ipxact:name>
                    <ipxact:description></ipxact:description>
                    <ipxact:addressOffset>0x0</ipxact:addressOffset>
                    <!-- LINK: registerDefinitionGroup: see 6.11.3, Register definition group -->
                    <ipxact:size>32</ipxact:size>
                    <ipxact:volatile>true</ipxact:volatile>
                    <ipxact:field>
                        <ipxact:name>Reset</ipxact:name>
                        <ipxact:description>When set, the entire NVM state machine is reset. This bit is self- clearing.</ipxact:description>
                        <ipxact:bitOffset>1</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Done</ipxact:name>
                        <ipxact:description>Sequence completion bit that is asserted when the command requested by assertion of the doit bit has completed.</ipxact:description>
                        <ipxact:bitOffset>3</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Doit</ipxact:name>
                        <ipxact:description>Command from software to start the defined command. The done bit must be clear before setting this bit. This bit is self clearing and will remain set while the command is active.</ipxact:description>
                        <ipxact:bitOffset>4</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Wr</ipxact:name>
                        <ipxact:description>The write/not read command bit. Set to execute write or erase.</ipxact:description>
                        <ipxact:bitOffset>5</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Erase</ipxact:name>
                        <ipxact:description>The erase command bit. Set high to execute an erase. This bit is ignored if the wr is clear.</ipxact:description>
                        <ipxact:bitOffset>6</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>First</ipxact:name>
                        <ipxact:description>This bit is passed to the SEE_FSM or SPI_FSM if the pass_mode bit is set</ipxact:description>
                        <ipxact:bitOffset>7</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Last</ipxact:name>
                        <ipxact:description>When this bit is set, the next command sequence is interpreted as the last one of a burst and any cleanup work is done.</ipxact:description>
                        <ipxact:bitOffset>8</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Write Enable Command</ipxact:name>
                        <ipxact:description>The write enable command bit. Set '1' will make the flash interface state machine generate a write enable command cycle to the flash device to set the write enable bit in the device status register. This command is used for devices with a write protection function.</ipxact:description>
                        <ipxact:bitOffset>16</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Write Disable Command</ipxact:name>
                        <ipxact:description>The write disable command bit. Set '1' will make the flash interface state machine generate a write disable command cycle to the flash device to clear the write enable bit in the device status register. This command is used for devices with a write protection function.</ipxact:description>
                        <ipxact:bitOffset>17</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                </ipxact:register>
                <ipxact:register>
                    <ipxact:name>WRITE</ipxact:name>
                    <ipxact:description>32bits of write data are used when write commands are executed.</ipxact:description>
                    <ipxact:addressOffset>0x8</ipxact:addressOffset>
                    <!-- LINK: registerDefinitionGroup: see 6.11.3, Register definition group -->
                    <ipxact:size>32</ipxact:size>
                    <ipxact:volatile>true</ipxact:volatile>
                    <ipxact:field>
                        <ipxact:name>SCLK Output Value</ipxact:name>
                        <ipxact:description>When in bit-bang mode, this bit controls the SCLK output value.</ipxact:description>
                        <ipxact:bitOffset>2</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>CSb Output Value</ipxact:name>
                        <ipxact:description>When in bit-bang mode, this bit controls the CSb output value.</ipxact:description>
                        <ipxact:bitOffset>3</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>SI Output Value</ipxact:name>
                        <ipxact:description>When in bit-bang mode, this bit controls the SI output value.</ipxact:description>
                        <ipxact:bitOffset>4</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>SO Output Value</ipxact:name>
                        <ipxact:description>When in bit-bang mode, this bit controls the SO output value.</ipxact:description>
                        <ipxact:bitOffset>5</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                </ipxact:register>
                <ipxact:register>
                    <ipxact:name>ADDR</ipxact:name>
                    <ipxact:description>The 24 bit address for a read or write operation (must be 4 byte aligned).</ipxact:description>
                    <ipxact:addressOffset>0xc</ipxact:addressOffset>
                    <!-- LINK: registerDefinitionGroup: see 6.11.3, Register definition group -->
                    <ipxact:size>32</ipxact:size>
                    <ipxact:volatile>true</ipxact:volatile>
                    <ipxact:field>
                        <ipxact:name>SCLK Output Disable</ipxact:name>
                        <ipxact:description>When in bit-bang mode, this bit controls the SCLK output enable.</ipxact:description>
                        <ipxact:bitOffset>2</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>CSb Output Disable</ipxact:name>
                        <ipxact:description>When in bit-bang mode, this bit controls the CSb output enable.</ipxact:description>
                        <ipxact:bitOffset>3</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>SI Output Disable</ipxact:name>
                        <ipxact:description>When in bit-bang mode, this bit controls the SI output enable.</ipxact:description>
                        <ipxact:bitOffset>4</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>SO Output Disable</ipxact:name>
                        <ipxact:description>When in bit-bang mode, this bit controls the SO output enable.</ipxact:description>
                        <ipxact:bitOffset>5</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                </ipxact:register>
                <ipxact:register>
                    <ipxact:name>READ</ipxact:name>
                    <ipxact:description>32bits of read data are used when read commands are executed.</ipxact:description>
                    <ipxact:addressOffset>0x10</ipxact:addressOffset>
                    <!-- LINK: registerDefinitionGroup: see 6.11.3, Register definition group -->
                    <ipxact:size>32</ipxact:size>
                    <ipxact:volatile>true</ipxact:volatile>
                    <ipxact:field>
                        <ipxact:name>SCLK Input Value</ipxact:name>
                        <ipxact:description>When in bit-bang mode, this bit reads the current SCLK input value.</ipxact:description>
                        <ipxact:bitOffset>2</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>CSb Input Value</ipxact:name>
                        <ipxact:description>When in bit-bang mode, this bit reads the current CSb input value.</ipxact:description>
                        <ipxact:bitOffset>3</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>SI Input Value</ipxact:name>
                        <ipxact:description>When in bit-bang mode, this bit reads the current SI input value.</ipxact:description>
                        <ipxact:bitOffset>4</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>SO Input Value</ipxact:name>
                        <ipxact:description>When in bit-bang mode, this bit reads the current SO input value.</ipxact:description>
                        <ipxact:bitOffset>5</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                </ipxact:register>
                <ipxact:register>
                    <ipxact:name>NVM_CFG_1</ipxact:name>
                    <ipxact:description></ipxact:description>
                    <ipxact:addressOffset>0x14</ipxact:addressOffset>
                    <!-- LINK: registerDefinitionGroup: see 6.11.3, Register definition group -->
                    <ipxact:size>32</ipxact:size>
                    <ipxact:volatile>true</ipxact:volatile>
                    <ipxact:field>
                        <ipxact:name>Flash Mode</ipxact:name>
                        <ipxact:description>Enable Flash Interface mode.</ipxact:description>
                        <ipxact:bitOffset>0</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Buffer Mode</ipxact:name>
                        <ipxact:description>Enable SSRAM Buffered Interface mode.</ipxact:description>
                        <ipxact:bitOffset>1</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Pass Mode</ipxact:name>
                        <ipxact:description>Enable pass-thorough mode to the byte level SPI and SEE state machines.</ipxact:description>
                        <ipxact:bitOffset>2</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Bitbang Mode</ipxact:name>
                        <ipxact:description>Enable bit-bang mode to control pins.</ipxact:description>
                        <ipxact:bitOffset>3</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Status Bit</ipxact:name>
                        <ipxact:description>Bit Offset in status command response to interpret as the ready flag.</ipxact:description>
                        <ipxact:bitOffset>4</ipxact:bitOffset>
                        <ipxact:bitWidth>3</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>SPI CLK DIV</ipxact:name>
                        <ipxact:description>The equation to calculate the clock freq. for SCK is: CORE_CLK / ((SPI_CLK_DIV + 1) * 2)</ipxact:description>
                        <ipxact:bitOffset>7</ipxact:bitOffset>
                        <ipxact:bitWidth>4</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Protect Mode</ipxact:name>
                        <ipxact:description></ipxact:description>
                        <ipxact:bitOffset>24</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Flash Size</ipxact:name>
                        <ipxact:description>Enables 1-Mbit devices as opposed to 512 Kbit. At CORE reset, this pin is set to the value of the SO pin.</ipxact:description>
                        <ipxact:bitOffset>25</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Page Size</ipxact:name>
                        <ipxact:description>These bits indicate the page size of the attached flash device. They are set automatically depending on the chosen flash as indicated by the strapping option pins.</ipxact:description>
                        <ipxact:bitOffset>28</ipxact:bitOffset>
                        <ipxact:bitWidth>3</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                        <ipxact:enumeratedValues>
                            <ipxact:enumeratedValue>
                                <ipxact:name>256 bytes</ipxact:name>
                                <ipxact:value>0</ipxact:value>
                            </ipxact:enumeratedValue>
                            <ipxact:enumeratedValue>
                                <ipxact:name>512 bytes</ipxact:name>
                                <ipxact:value>1</ipxact:value>
                            </ipxact:enumeratedValue>
                            <ipxact:enumeratedValue>
                                <ipxact:name>1024 bytes</ipxact:name>
                                <ipxact:value>2</ipxact:value>
                            </ipxact:enumeratedValue>
                            <ipxact:enumeratedValue>
                                <ipxact:name>2048 bytes</ipxact:name>
                                <ipxact:value>3</ipxact:value>
                            </ipxact:enumeratedValue>
                            <ipxact:enumeratedValue>
                                <ipxact:name>4096 bytes</ipxact:name>
                                <ipxact:value>4</ipxact:value>
                            </ipxact:enumeratedValue>
                            <ipxact:enumeratedValue>
                                <ipxact:name>264 bytes</ipxact:name>
                                <ipxact:value>5</ipxact:value>
                            </ipxact:enumeratedValue>
                        </ipxact:enumeratedValues>
                    </ipxact:field>
                </ipxact:register>
                <ipxact:register>
                    <ipxact:name>NVM_CFG_2</ipxact:name>
                    <ipxact:description></ipxact:description>
                    <ipxact:addressOffset>0x18</ipxact:addressOffset>
                    <!-- LINK: registerDefinitionGroup: see 6.11.3, Register definition group -->
                    <ipxact:size>32</ipxact:size>
                    <ipxact:volatile>true</ipxact:volatile>
                    <ipxact:field>
                        <ipxact:name>Erase Command</ipxact:name>
                        <ipxact:description>This is the Flash page erase command.</ipxact:description>
                        <ipxact:bitOffset>0</ipxact:bitOffset>
                        <ipxact:bitWidth>8</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Status Command</ipxact:name>
                        <ipxact:description>This is the Flash status register read command.</ipxact:description>
                        <ipxact:bitOffset>16</ipxact:bitOffset>
                        <ipxact:bitWidth>8</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                </ipxact:register>
                <ipxact:register>
                    <ipxact:name>NVM_CFG_3</ipxact:name>
                    <ipxact:description></ipxact:description>
                    <ipxact:addressOffset>0x1c</ipxact:addressOffset>
                    <!-- LINK: registerDefinitionGroup: see 6.11.3, Register definition group -->
                    <ipxact:size>32</ipxact:size>
                    <ipxact:volatile>true</ipxact:volatile>
                    <ipxact:field>
                        <ipxact:name>Write Command</ipxact:name>
                        <ipxact:description>Command to write a series of bytes into a selected page in the Flash device. Note: this write command wraps around to the beginning of the page after the internal address counter in the Flash device reaches the end of the page.</ipxact:description>
                        <ipxact:bitOffset>8</ipxact:bitOffset>
                        <ipxact:bitWidth>8</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Read Command</ipxact:name>
                        <ipxact:description>This is the Flash/SEEPROM read command. Following this command, any number of bytes may be read up to the end of the flash memory.</ipxact:description>
                        <ipxact:bitOffset>24</ipxact:bitOffset>
                        <ipxact:bitWidth>8</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                </ipxact:register>
                <ipxact:register>
                    <ipxact:name>SOFTWARE_ARBITRATION</ipxact:name>
                    <ipxact:description></ipxact:description>
                    <ipxact:addressOffset>0x20</ipxact:addressOffset>
                    <!-- LINK: registerDefinitionGroup: see 6.11.3, Register definition group -->
                    <ipxact:size>32</ipxact:size>
                    <ipxact:volatile>true</ipxact:volatile>
                    <ipxact:field>
                        <ipxact:name>Req Set0</ipxact:name>
                        <ipxact:description></ipxact:description>
                        <ipxact:bitOffset>0</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Req Set1</ipxact:name>
                        <ipxact:description></ipxact:description>
                        <ipxact:bitOffset>1</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Req Set2</ipxact:name>
                        <ipxact:description></ipxact:description>
                        <ipxact:bitOffset>2</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Req Set3</ipxact:name>
                        <ipxact:description></ipxact:description>
                        <ipxact:bitOffset>3</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Req Clr0</ipxact:name>
                        <ipxact:description></ipxact:description>
                        <ipxact:bitOffset>4</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Req Clr1</ipxact:name>
                        <ipxact:description></ipxact:description>
                        <ipxact:bitOffset>5</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Req Clr2</ipxact:name>
                        <ipxact:description></ipxact:description>
                        <ipxact:bitOffset>6</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Req Clr3</ipxact:name>
                        <ipxact:description></ipxact:description>
                        <ipxact:bitOffset>7</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Arb Won0</ipxact:name>
                        <ipxact:description></ipxact:description>
                        <ipxact:bitOffset>8</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Arb Won1</ipxact:name>
                        <ipxact:description></ipxact:description>
                        <ipxact:bitOffset>9</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Arb Won2</ipxact:name>
                        <ipxact:description></ipxact:description>
                        <ipxact:bitOffset>10</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Arb Won3</ipxact:name>
                        <ipxact:description></ipxact:description>
                        <ipxact:bitOffset>11</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                </ipxact:register>
                <ipxact:register>
                    <ipxact:name>ACCESS</ipxact:name>
                    <ipxact:description></ipxact:description>
                    <ipxact:addressOffset>0x24</ipxact:addressOffset>
                    <!-- LINK: registerDefinitionGroup: see 6.11.3, Register definition group -->
                    <ipxact:size>32</ipxact:size>
                    <ipxact:volatile>true</ipxact:volatile>
                    <ipxact:field>
                        <ipxact:name>Enable</ipxact:name>
                        <ipxact:description>When 1, allows the NVRAM write command to be issued even if the NVRAM write enable bit 21 of the mode control register 0x6800.</ipxact:description>
                        <ipxact:bitOffset>0</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Write Enable</ipxact:name>
                        <ipxact:description>When 0, prevents write access to all other NVRAM registers, except for the Software arbitration register.</ipxact:description>
                        <ipxact:bitOffset>1</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                </ipxact:register>
                <ipxact:register>
                    <ipxact:name>NVM_WRITE_1</ipxact:name>
                    <ipxact:description></ipxact:description>
                    <ipxact:addressOffset>0x28</ipxact:addressOffset>
                    <!-- LINK: registerDefinitionGroup: see 6.11.3, Register definition group -->
                    <ipxact:size>32</ipxact:size>
                    <ipxact:volatile>true</ipxact:volatile>
                    <ipxact:field>
                        <ipxact:name>Write Enable Command</ipxact:name>
                        <ipxact:description>Flash write enable command when device with protection function is used. This command will be issued by the flash interface state machine through SPI interface.</ipxact:description>
                        <ipxact:bitOffset>0</ipxact:bitOffset>
                        <ipxact:bitWidth>8</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Write Disable Command</ipxact:name>
                        <ipxact:description>Flash write disable command when device with protection function is used. This command will be issued by the flash interface state machine through SPI interface.</ipxact:description>
                        <ipxact:bitOffset>8</ipxact:bitOffset>
                        <ipxact:bitWidth>8</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                </ipxact:register>
                <ipxact:register>
                    <ipxact:name>ARBITRATION_WATCHDOG</ipxact:name>
                    <ipxact:description></ipxact:description>
                    <ipxact:addressOffset>0x2C</ipxact:addressOffset>
                    <!-- LINK: registerDefinitionGroup: see 6.11.3, Register definition group -->
                    <ipxact:size>32</ipxact:size>
                    <ipxact:volatile>true</ipxact:volatile>
                    <ipxact:field>
                        <ipxact:name>reserved</ipxact:name>
                        <ipxact:description>Reserved</ipxact:description>
                        <ipxact:bitOffset>0</ipxact:bitOffset>
                        <ipxact:bitWidth>32</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                </ipxact:register>

                <ipxact:register>
                    <ipxact:name>AUTO_SENSE_STATUS</ipxact:name>
                    <ipxact:description></ipxact:description>
                    <ipxact:addressOffset>0x38</ipxact:addressOffset>
                    <!-- LINK: registerDefinitionGroup: see 6.11.3, Register definition group -->
                    <ipxact:size>32</ipxact:size>
                    <ipxact:volatile>true</ipxact:volatile>
                    <ipxact:field>
                        <ipxact:name>Auto Config Busy</ipxact:name>
                        <ipxact:description>Auto Configuration Busy</ipxact:description>
                        <ipxact:bitOffset>0</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Auto Config Enable</ipxact:name>
                        <ipxact:description>Auto config feature is enabled through pin strap.</ipxact:description>
                        <ipxact:bitOffset>4</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Auto Config Successful</ipxact:name>
                        <ipxact:description>Auto config is successful.</ipxact:description>
                        <ipxact:bitOffset>5</ipxact:bitOffset>
                        <ipxact:bitWidth>1</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Auto Config State</ipxact:name>
                        <ipxact:description>Auto Config FSM state.</ipxact:description>
                        <ipxact:bitOffset>8</ipxact:bitOffset>
                        <ipxact:bitWidth>5</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                    </ipxact:field>
                    <ipxact:field>
                        <ipxact:name>Auto Detected Device ID</ipxact:name>
                        <ipxact:description>Auto detected device ID.</ipxact:description>
                        <ipxact:bitOffset>16</ipxact:bitOffset>
                        <ipxact:bitWidth>5</ipxact:bitWidth>
                        <ipxact:access>read-write</ipxact:access>
                        <ipxact:enumeratedValues>
                            <!-- LINK: enumeratedValue: see 6.11.10, Enumeration values -->
                            <ipxact:enumeratedValue>
                                <ipxact:name>AT45DB011D</ipxact:name>
                                <ipxact:value>4</ipxact:value>
                            </ipxact:enumeratedValue>
                            <ipxact:enumeratedValue>
                                <ipxact:name>AT45DB021D</ipxact:name>
                                <ipxact:value>3</ipxact:value>
                            </ipxact:enumeratedValue>
                            <ipxact:enumeratedValue>
                                <ipxact:name>AT45DB041D</ipxact:name>
                                <ipxact:value>0</ipxact:value>
                            </ipxact:enumeratedValue>
                            <ipxact:enumeratedValue>
                                <ipxact:name>STM25PE10</ipxact:name>
                                <ipxact:value>11</ipxact:value>
                            </ipxact:enumeratedValue>
                            <ipxact:enumeratedValue>
                                <ipxact:name>STM25PE20</ipxact:name>
                                <ipxact:value>10</ipxact:value>
                            </ipxact:enumeratedValue>
                            <ipxact:enumeratedValue>
                                <ipxact:name>STM25PE40</ipxact:name>
                                <ipxact:value>8</ipxact:value>
                            </ipxact:enumeratedValue>
                            <ipxact:enumeratedValue>
                                <ipxact:name>STM45PE10</ipxact:name>
                                <ipxact:value>12</ipxact:value>
                            </ipxact:enumeratedValue>
                            <ipxact:enumeratedValue>
                                <ipxact:name>STM45PE20</ipxact:name>
                                <ipxact:value>13</ipxact:value>
                            </ipxact:enumeratedValue>
                            <ipxact:enumeratedValue>
                                <ipxact:name>STM45PE40</ipxact:name>
                                <ipxact:value>14</ipxact:value>
                            </ipxact:enumeratedValue>
                        </ipxact:enumeratedValues>
                    </ipxact:field>
                </ipxact:register>
            </ipxact:addressBlock>
        </ipxact:memoryMap>
    </ipxact:memoryMaps>
</ipxact:component>
